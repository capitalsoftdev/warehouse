//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseClient.WWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MunitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductCategoryIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Munit {
            get {
                return this.MunitField;
            }
            set {
                if ((this.MunitField.Equals(value) != true)) {
                    this.MunitField = value;
                    this.RaisePropertyChanged("Munit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCategoryId {
            get {
                return this.ProductCategoryIdField;
            }
            set {
                if ((this.ProductCategoryIdField.Equals(value) != true)) {
                    this.ProductCategoryIdField = value;
                    this.RaisePropertyChanged("ProductCategoryId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductManagment", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ProductManagment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionDate {
            get {
                return this.ActionDateField;
            }
            set {
                if ((this.ActionDateField.Equals(value) != true)) {
                    this.ActionDateField = value;
                    this.RaisePropertyChanged("ActionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifyDate {
            get {
                return this.LastModifyDateField;
            }
            set {
                if ((this.LastModifyDateField.Equals(value) != true)) {
                    this.LastModifyDateField = value;
                    this.RaisePropertyChanged("LastModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleGroup", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RoleGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Munit", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Munit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MunitNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MunitName {
            get {
                return this.MunitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MunitNameField, value) != true)) {
                    this.MunitNameField = value;
                    this.RaisePropertyChanged("MunitName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCategory", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ProductCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WarehouseWebService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int RoleGroupId {
            get {
                return this.RoleGroupIdField;
            }
            set {
                if ((this.RoleGroupIdField.Equals(value) != true)) {
                    this.RoleGroupIdField = value;
                    this.RaisePropertyChanged("RoleGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime LastModifireDate {
            get {
                return this.LastModifireDateField;
            }
            set {
                if ((this.LastModifireDateField.Equals(value) != true)) {
                    this.LastModifireDateField = value;
                    this.RaisePropertyChanged("LastModifireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.capitalsoft.am/api/soap/2017/08/22", ConfigurationName="WWS.IWarehouseService")]
    public interface IWarehouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "duct", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "ductResponse")]
        int CreateOrUpdateProduct(WarehouseClient.WWS.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "duct", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "ductResponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateProductAsync(WarehouseClient.WWS.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProducts", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductsRespon" +
            "se")]
        System.Collections.Generic.List<WarehouseClient.WWS.Product> GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProducts", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductsRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Product>> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductByIdRes" +
            "ponse")]
        WarehouseClient.WWS.Product GetProductById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductByIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.Product> GetProductByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableProduct", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableProductRes" +
            "ponse")]
        int DisableProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableProduct", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableProductRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> DisableProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetActiveProduct", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetActiveProductR" +
            "esponse")]
        System.Collections.Generic.List<WarehouseClient.WWS.Product> GetActiveProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetActiveProduct", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetActiveProductR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Product>> GetActiveProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetItem", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetItemResponse")]
        System.Collections.Generic.List<WarehouseClient.WWS.ProductManagment> GetItem(int id, int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetItem", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetItemResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.ProductManagment>> GetItemAsync(int id, int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DeleteItem", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DeleteItemRespons" +
            "e")]
        int DeleteItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DeleteItem", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DeleteItemRespons" +
            "e")]
        System.Threading.Tasks.Task<int> DeleteItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdate", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRes" +
            "ponse")]
        int CreateOrUpdate(WarehouseClient.WWS.ProductManagment prMn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdate", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateAsync(WarehouseClient.WWS.ProductManagment prMn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "e", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "eResponse")]
        int CreateOrUpdateRole(WarehouseClient.WWS.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "e", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "eResponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateRoleAsync(WarehouseClient.WWS.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoles", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRolesResponse")]
        System.Collections.Generic.List<WarehouseClient.WWS.Role> GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoles", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Role>> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleByIdRespon" +
            "se")]
        WarehouseClient.WWS.Role GetRoleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleByIdRespon" +
            "se")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.Role> GetRoleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRole", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRoleRespon" +
            "se")]
        int DisableRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRole", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRoleRespon" +
            "se")]
        System.Threading.Tasks.Task<int> DisableRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "eGroup", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "eGroupResponse")]
        int CreateOrUpdateRoleGroup(WarehouseClient.WWS.RoleGroup roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "eGroup", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdateRol" +
            "eGroupResponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateRoleGroupAsync(WarehouseClient.WWS.RoleGroup roleGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroups", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroupsResp" +
            "onse")]
        System.Collections.Generic.List<WarehouseClient.WWS.RoleGroup> GetRoleGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroups", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroupsResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.RoleGroup>> GetRoleGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroupById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroupByIdR" +
            "esponse")]
        WarehouseClient.WWS.RoleGroup GetRoleGroupById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroupById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetRoleGroupByIdR" +
            "esponse")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.RoleGroup> GetRoleGroupByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRoleGroup", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRoleGroupR" +
            "esponse")]
        int DisableRoleGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRoleGroup", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/DisableRoleGroupR" +
            "esponse")]
        System.Threading.Tasks.Task<int> DisableRoleGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunits", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunitsResponse" +
            "")]
        System.Collections.Generic.List<WarehouseClient.WWS.Munit> GetMunits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunits", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunitsResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Munit>> GetMunitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunit", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunitResponse")]
        WarehouseClient.WWS.Munit GetMunit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunit", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetMunitResponse")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.Munit> GetMunitAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "ductCategory", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "ductCategoryResponse")]
        int CreateOrUpdateProductCategory(WarehouseClient.WWS.ProductCategory product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "ductCategory", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/CreateOrUpdatePro" +
            "ductCategoryResponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateProductCategoryAsync(WarehouseClient.WWS.ProductCategory product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetAllProductCate" +
            "gories", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetAllProductCate" +
            "goriesResponse")]
        System.Collections.Generic.List<WarehouseClient.WWS.ProductCategory> GetAllProductCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetAllProductCate" +
            "gories", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetAllProductCate" +
            "goriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.ProductCategory>> GetAllProductCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductCategor" +
            "yById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductCategor" +
            "yByIdResponse")]
        WarehouseClient.WWS.ProductCategory GetProductCategoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductCategor" +
            "yById", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/GetProductCategor" +
            "yByIdResponse")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.ProductCategory> GetProductCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ManageProductCate" +
            "gory", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ManageProductCate" +
            "goryResponse")]
        int ManageProductCategory(int id, int action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ManageProductCate" +
            "gory", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ManageProductCate" +
            "goryResponse")]
        System.Threading.Tasks.Task<int> ManageProductCategoryAsync(int id, int action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/Login", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/LoginResponse")]
        WarehouseClient.WWS.User Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/Login", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/LoginResponse")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.User> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUsers" +
            "", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUsers" +
            "Response")]
        System.Collections.Generic.List<WarehouseClient.WWS.User> SelectActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUsers" +
            "", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUsers" +
            "Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.User>> SelectActiveUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ActivateOrDeActiv" +
            "ate", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ActivateOrDeActiv" +
            "ateResponse")]
        void ActivateOrDeActivate(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ActivateOrDeActiv" +
            "ate", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/ActivateOrDeActiv" +
            "ateResponse")]
        System.Threading.Tasks.Task ActivateOrDeActivateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUserB" +
            "yId", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUserB" +
            "yIdResponse")]
        WarehouseClient.WWS.User SelectActiveUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUserB" +
            "yId", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/SelectActiveUserB" +
            "yIdResponse")]
        System.Threading.Tasks.Task<WarehouseClient.WWS.User> SelectActiveUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateOrInsertUse" +
            "r", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateOrInsertUse" +
            "rResponse")]
        void UpdateOrInsertUser(WarehouseClient.WWS.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateOrInsertUse" +
            "r", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateOrInsertUse" +
            "rResponse")]
        System.Threading.Tasks.Task UpdateOrInsertUserAsync(WarehouseClient.WWS.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateUserLoginDa" +
            "te", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateUserLoginDa" +
            "teResponse")]
        void UpdateUserLoginDate(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateUserLoginDa" +
            "te", ReplyAction="http://www.capitalsoft.am/api/soap/2017/08/22/IWarehouseService/UpdateUserLoginDa" +
            "teResponse")]
        System.Threading.Tasks.Task UpdateUserLoginDateAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarehouseServiceChannel : WarehouseClient.WWS.IWarehouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarehouseServiceClient : System.ServiceModel.ClientBase<WarehouseClient.WWS.IWarehouseService>, WarehouseClient.WWS.IWarehouseService {
        
        public WarehouseServiceClient() {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateOrUpdateProduct(WarehouseClient.WWS.Product product) {
            return base.Channel.CreateOrUpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateProductAsync(WarehouseClient.WWS.Product product) {
            return base.Channel.CreateOrUpdateProductAsync(product);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.Product> GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Product>> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public WarehouseClient.WWS.Product GetProductById(int id) {
            return base.Channel.GetProductById(id);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.Product> GetProductByIdAsync(int id) {
            return base.Channel.GetProductByIdAsync(id);
        }
        
        public int DisableProduct(int id) {
            return base.Channel.DisableProduct(id);
        }
        
        public System.Threading.Tasks.Task<int> DisableProductAsync(int id) {
            return base.Channel.DisableProductAsync(id);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.Product> GetActiveProduct() {
            return base.Channel.GetActiveProduct();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Product>> GetActiveProductAsync() {
            return base.Channel.GetActiveProductAsync();
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.ProductManagment> GetItem(int id, int userId, int productId) {
            return base.Channel.GetItem(id, userId, productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.ProductManagment>> GetItemAsync(int id, int userId, int productId) {
            return base.Channel.GetItemAsync(id, userId, productId);
        }
        
        public int DeleteItem(int id) {
            return base.Channel.DeleteItem(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteItemAsync(int id) {
            return base.Channel.DeleteItemAsync(id);
        }
        
        public int CreateOrUpdate(WarehouseClient.WWS.ProductManagment prMn) {
            return base.Channel.CreateOrUpdate(prMn);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateAsync(WarehouseClient.WWS.ProductManagment prMn) {
            return base.Channel.CreateOrUpdateAsync(prMn);
        }
        
        public int CreateOrUpdateRole(WarehouseClient.WWS.Role role) {
            return base.Channel.CreateOrUpdateRole(role);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateRoleAsync(WarehouseClient.WWS.Role role) {
            return base.Channel.CreateOrUpdateRoleAsync(role);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.Role> GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Role>> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public WarehouseClient.WWS.Role GetRoleById(int id) {
            return base.Channel.GetRoleById(id);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.Role> GetRoleByIdAsync(int id) {
            return base.Channel.GetRoleByIdAsync(id);
        }
        
        public int DisableRole(int id) {
            return base.Channel.DisableRole(id);
        }
        
        public System.Threading.Tasks.Task<int> DisableRoleAsync(int id) {
            return base.Channel.DisableRoleAsync(id);
        }
        
        public int CreateOrUpdateRoleGroup(WarehouseClient.WWS.RoleGroup roleGroup) {
            return base.Channel.CreateOrUpdateRoleGroup(roleGroup);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateRoleGroupAsync(WarehouseClient.WWS.RoleGroup roleGroup) {
            return base.Channel.CreateOrUpdateRoleGroupAsync(roleGroup);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.RoleGroup> GetRoleGroups() {
            return base.Channel.GetRoleGroups();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.RoleGroup>> GetRoleGroupsAsync() {
            return base.Channel.GetRoleGroupsAsync();
        }
        
        public WarehouseClient.WWS.RoleGroup GetRoleGroupById(int id) {
            return base.Channel.GetRoleGroupById(id);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.RoleGroup> GetRoleGroupByIdAsync(int id) {
            return base.Channel.GetRoleGroupByIdAsync(id);
        }
        
        public int DisableRoleGroup(int id) {
            return base.Channel.DisableRoleGroup(id);
        }
        
        public System.Threading.Tasks.Task<int> DisableRoleGroupAsync(int id) {
            return base.Channel.DisableRoleGroupAsync(id);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.Munit> GetMunits() {
            return base.Channel.GetMunits();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.Munit>> GetMunitsAsync() {
            return base.Channel.GetMunitsAsync();
        }
        
        public WarehouseClient.WWS.Munit GetMunit(int id) {
            return base.Channel.GetMunit(id);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.Munit> GetMunitAsync(int id) {
            return base.Channel.GetMunitAsync(id);
        }
        
        public int CreateOrUpdateProductCategory(WarehouseClient.WWS.ProductCategory product) {
            return base.Channel.CreateOrUpdateProductCategory(product);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateProductCategoryAsync(WarehouseClient.WWS.ProductCategory product) {
            return base.Channel.CreateOrUpdateProductCategoryAsync(product);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.ProductCategory> GetAllProductCategories() {
            return base.Channel.GetAllProductCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.ProductCategory>> GetAllProductCategoriesAsync() {
            return base.Channel.GetAllProductCategoriesAsync();
        }
        
        public WarehouseClient.WWS.ProductCategory GetProductCategoryById(int id) {
            return base.Channel.GetProductCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.ProductCategory> GetProductCategoryByIdAsync(int id) {
            return base.Channel.GetProductCategoryByIdAsync(id);
        }
        
        public int ManageProductCategory(int id, int action) {
            return base.Channel.ManageProductCategory(id, action);
        }
        
        public System.Threading.Tasks.Task<int> ManageProductCategoryAsync(int id, int action) {
            return base.Channel.ManageProductCategoryAsync(id, action);
        }
        
        public WarehouseClient.WWS.User Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.User> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public System.Collections.Generic.List<WarehouseClient.WWS.User> SelectActiveUsers() {
            return base.Channel.SelectActiveUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WarehouseClient.WWS.User>> SelectActiveUsersAsync() {
            return base.Channel.SelectActiveUsersAsync();
        }
        
        public void ActivateOrDeActivate(int id) {
            base.Channel.ActivateOrDeActivate(id);
        }
        
        public System.Threading.Tasks.Task ActivateOrDeActivateAsync(int id) {
            return base.Channel.ActivateOrDeActivateAsync(id);
        }
        
        public WarehouseClient.WWS.User SelectActiveUserById(int id) {
            return base.Channel.SelectActiveUserById(id);
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WWS.User> SelectActiveUserByIdAsync(int id) {
            return base.Channel.SelectActiveUserByIdAsync(id);
        }
        
        public void UpdateOrInsertUser(WarehouseClient.WWS.User user) {
            base.Channel.UpdateOrInsertUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateOrInsertUserAsync(WarehouseClient.WWS.User user) {
            return base.Channel.UpdateOrInsertUserAsync(user);
        }
        
        public void UpdateUserLoginDate(int id) {
            base.Channel.UpdateUserLoginDate(id);
        }
        
        public System.Threading.Tasks.Task UpdateUserLoginDateAsync(int id) {
            return base.Channel.UpdateUserLoginDateAsync(id);
        }
    }
}
